/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.3
*/

import { Contract as __Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
  StrSlice,
} from 'fuels';

import type { Enum } from "./common";

export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;

export type MultiAssetTransferConfigurables = Partial<{
  RECIPIENTS: [IdentityInput, IdentityInput, IdentityInput];
  AMOUNTS: [BigNumberish, BigNumberish, BigNumberish];
}>;

const abi = {
  "programType": "script",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "[enum std::identity::Identity; 3]",
      "concreteTypeId": "7ae598b7f34ec3e63642d56191ff3782712ead1f31310e6ce613e923599d3194",
      "metadataTypeId": 0
    },
    {
      "type": "[u64; 3]",
      "concreteTypeId": "776fb5a3824169d6736138565fdc20aad684d9111266a5ff6d5c675280b7e199",
      "metadataTypeId": 1
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 3
    },
    {
      "type": "str",
      "concreteTypeId": "8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a"
    },
    {
      "type": "struct std::asset_id::AssetId",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "metadataTypeId": 5
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "[_; 3]",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__array_element",
          "typeId": 3
        }
      ]
    },
    {
      "type": "[_; 3]",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "__array_element",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "b256",
      "metadataTypeId": 2
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "Address",
          "typeId": 4
        },
        {
          "name": "ContractId",
          "typeId": 6
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "bits",
          "typeId": 2
        }
      ]
    },
    {
      "type": "struct std::asset_id::AssetId",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "bits",
          "typeId": 2
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "bits",
          "typeId": 2
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "main",
      "inputs": [
        {
          "name": "asset_id",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        }
      ],
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": null
    }
  ],
  "loggedTypes": [
    {
      "logId": "1515152261580153489",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    },
    {
      "logId": "12356980511120185571",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
    },
    {
      "logId": "10098701174489624218",
      "concreteTypeId": "8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a"
    }
  ],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "RECIPIENTS",
      "concreteTypeId": "7ae598b7f34ec3e63642d56191ff3782712ead1f31310e6ce613e923599d3194",
      "offset": 6104,
      "indirect": false
    },
    {
      "name": "AMOUNTS",
      "concreteTypeId": "776fb5a3824169d6736138565fdc20aad684d9111266a5ff6d5c675280b7e199",
      "offset": 6080,
      "indirect": false
    }
  ],
  "errorCodes": {}
};

const storageSlots: StorageSlot[] = [];

export class MultiAssetTransferInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    main: FunctionFragment;
  };
}

export class MultiAssetTransfer extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: MultiAssetTransferInterface;
  declare functions: {
    main: InvokeFunction<[asset_id: AssetIdInput], boolean>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
