/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.3
  Forc version: 0.68.9
  Fuel-Core version: 0.43.2
*/

import {
  BigNumberish,
  BN,
  decompressBytecode,
  InputValue,
  Predicate as __Predicate,
  PredicateParams,
  Provider,
} from 'fuels';

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;

export type MultiSigLoaderConfigurables = Partial<{
    SIGNERS: [AddressInput, AddressInput, AddressInput];
    REQUIRED_SIGNATURES: BigNumberish;
}>;

export type MultiSigLoaderInputs = [];

export type MultiSigLoaderParameters = Omit<
  PredicateParams<MultiSigLoaderInputs, MultiSigLoaderConfigurables>,
  'abi' | 'bytecode'
>;

const abi = {
  "programType": "predicate",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "[struct std::address::Address; 3]",
      "concreteTypeId": "167e0bd8e10fe29287c3308ec1360057ed9a80443c19333cdad14cebaafc7235",
      "metadataTypeId": 0
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "[_; 3]",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__array_element",
          "typeId": 2
        }
      ]
    },
    {
      "type": "b256",
      "metadataTypeId": 1
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "bits",
          "typeId": 1
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "main",
      "inputs": [],
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "SIGNERS",
      "concreteTypeId": "167e0bd8e10fe29287c3308ec1360057ed9a80443c19333cdad14cebaafc7235",
      "offset": 96,
      "indirect": false
    },
    {
      "name": "REQUIRED_SIGNATURES",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "offset": 88,
      "indirect": false
    }
  ],
  "errorCodes": {}
};

const bytecode = decompressBytecode('H4sIAAAAAAAAA5NyMGAIcGQwkHIJYNjlycBg5MDSCOQrxALZQJoDyG9ScBVmCHIVYPFyYWCwm63MfXYuN8f6/YZRcR9yQmZssJ/LNCdQJNe24NjimW9+MEBABpRmgtI0AwC6+CO/wAAAAA==');

export class MultiSigLoader extends __Predicate<
  MultiSigLoaderInputs,
  MultiSigLoaderConfigurables
> {
  static readonly abi = abi;
  static readonly bytecode = bytecode;

  constructor(params: MultiSigLoaderParameters) {
    super({ abi, bytecode, ...params });
  }
}
