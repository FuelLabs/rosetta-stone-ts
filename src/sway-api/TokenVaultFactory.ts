/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.3
*/

import { ContractFactory as __ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions } from "fuels";

import { TokenVault } from "./TokenVault";

const bytecode = decompressBytecode("");

export class TokenVaultFactory extends __ContractFactory<TokenVault> {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(
      bytecode,
      TokenVault.abi,
      accountOrProvider,
      TokenVault.storageSlots
    );
  }

  static deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ) {
    const factory = new TokenVaultFactory(wallet);
    return factory.deploy(options);
  }
}
